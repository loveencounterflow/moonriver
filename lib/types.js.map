{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/NG'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\nstf_prefix                = '_transform_from_'\n{ Intertype }             = require 'intertype'\nbase_types                = null\nsnyc_types                = null\nasync_types               = null\ntransform_types           = null\nmisfit                    = Symbol 'misfit'\nSTREAM                    = require 'node:stream'\n\n\n#-----------------------------------------------------------------------------------------------------------\nget_sync_source_fitting_types = ->\n  main  = require './main'\n  R     = new Set()\n  for name from GUY.props.walk_keys main.Segment::, { hidden: true, }\n    continue unless name.startsWith stf_prefix\n    R.add name.replace stf_prefix, ''\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nget_async_source_fitting_types = ->\n  main  = require './main'\n  R     = new Set()\n  for name from GUY.props.walk_keys main.Async_segment::, { hidden: true, }\n    continue unless name.startsWith stf_prefix\n    R.add name.replace stf_prefix, ''\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nget_base_types = ->\n  return base_types if base_types?\n  #.........................................................................................................\n  base_types                = new Intertype()\n  main                      = require './main'\n  { declare }               = base_types\n  source_fitting_types      = get_sync_source_fitting_types()\n  #.........................................................................................................\n  declare.function0             override: true, isa: ( x ) -> ( @isa.function      x ) and ( x.length is 0 )\n  declare.function1             override: true, isa: ( x ) -> ( @isa.function      x ) and ( x.length is 1 )\n  declare.function2             override: true, isa: ( x ) -> ( @isa.function      x ) and ( x.length is 2 )\n  declare.asyncfunction0        override: true, isa: ( x ) -> ( @isa.asyncfunction x ) and ( x.length is 0 )\n  declare.asyncfunction1        override: true, isa: ( x ) -> ( @isa.asyncfunction x ) and ( x.length is 1 )\n  declare.asyncfunction2        override: true, isa: ( x ) -> ( @isa.asyncfunction x ) and ( x.length is 2 )\n  #.........................................................................................................\n  declare.pipeline                              isa: ( x ) -> x instanceof main.Pipeline\n  declare.sync_pipeline         override: true, isa: ( x ) -> ( x instanceof main.Pipeline ) and not \\\n                                                              ( x instanceof main.Async_pipeline )\n  declare.async_pipeline        override: true, isa: ( x ) -> x instanceof main.Async_pipeline\n  #.........................................................................................................\n  declare.nodejs_writestream    override: true, isa: ( x ) -> x instanceof STREAM.Writable\n  declare.nodejs_readstream     override: true, isa: ( x ) -> x instanceof STREAM.Readable\n  #.........................................................................................................\n  declare.reporting_collector   override: true, isa: ( x ) -> x instanceof main.Reporting_collector\n  declare.proto_segment         override: true, isa: ( x ) -> x instanceof main.Proto_segment\n  declare.collector                             isa: 'list.or.reporting_collector'\n  declare.misfit                override: true, default: misfit, isa: ( x ) -> x is misfit\n  #.........................................................................................................\n  declare.modifiers\n    fields:\n      first:      'anything'\n      last:       'anything'\n    default:\n      first:      misfit\n      last:       misfit\n    create: ( x ) ->\n      return { first: misfit, last: misfit, } unless x?\n      return x unless @isa.object x\n      return { first: ( GUY.props.get x, 'first', misfit ), last: ( GUY.props.get x, 'last',  misfit ), }\n  #.........................................................................................................\n  return base_types\n\n#-----------------------------------------------------------------------------------------------------------\nget_sync_types = ->\n  return sync_types if sync_types?\n  #.........................................................................................................\n  sync_types                = new Intertype get_base_types()\n  main                      = require './main'\n  { declare }               = sync_types\n  source_fitting_types      = get_sync_source_fitting_types()\n  #.........................................................................................................\n  declare.producer_fitting      override: true, isa: 'function0'\n  declare.observer_fitting      override: true, isa: 'function1'\n  declare.transducer_fitting    override: true, isa: 'function2'\n  declare.source_fitting                        isa:  ( x ) -> source_fitting_types.has @type_of x\n  declare.activator_fitting                     isa: 'producer_fitting.or.source_fitting'\n  declare.duct_fitting                          isa: 'observer_fitting.or.transducer_fitting'\n  declare.fitting                               isa: 'duct_fitting.or.activator_fitting'\n  declare.segment                               isa: ( x ) -> x? and x instanceof main.Segment\n  #.........................................................................................................\n  declare.segment_cfg\n    fields:\n      host:       'sync_pipeline'\n      protocol:   'boolean.or.function'\n      input:      'collector'\n      output:     'collector'\n      fitting:    'fitting'\n      modifiers:  'modifiers'\n    default:\n      host:       null\n      protocol:   false\n      input:      null\n      output:     null\n      fitting:    null\n      modifiers:  null\n  #.........................................................................................................\n  declare.pipeline_cfg\n    fields:\n      protocol:   'boolean.or.function'\n    default:\n      protocol:   false\n  #.........................................................................................................\n  return sync_types\n\n\n#=========================================================================================================\nget_async_types = ->\n  return async_types if async_types?\n  #.........................................................................................................\n  async_types               = new Intertype get_base_types()\n  main                      = require './main'\n  { declare }               = async_types\n  source_fitting_types      = get_async_source_fitting_types()\n  #.........................................................................................................\n  declare.producer_fitting      override: true, isa: 'function0.or.asyncfunction0'\n  declare.observer_fitting      override: true, isa: 'function1.or.asyncfunction1'\n  declare.transducer_fitting    override: true, isa: 'function2.or.asyncfunction2'\n  declare.source_fitting                        isa: ( x ) -> source_fitting_types.has @type_of x\n  declare.activator_fitting                     isa: 'producer_fitting.or.source_fitting'\n  declare.duct_fitting                          isa: 'observer_fitting.or.transducer_fitting'\n  declare.fitting                               isa: 'duct_fitting.or.activator_fitting'\n  declare.segment                               isa: ( x ) -> x? and ( x instanceof main.Async_segment  ) \\\n                                                                  or ( x instanceof main. Segment       )\n  #.........................................................................................................\n  declare.segment_cfg\n    fields:\n      host:       'async_pipeline'\n      protocol:   'function'\n      input:      'collector'\n      output:     'collector'\n      fitting:    'fitting'\n      modifiers:  'modifiers'\n    default:\n      host:       null\n      protocol:   false\n      input:      null\n      output:     null\n      fitting:    null\n      modifiers:  null\n  #.........................................................................................................\n  declare.pipeline_cfg\n    fields:\n      ### TAINT could also be asyncfunction ###\n      protocol:   'boolean.or.function'\n    default:\n      protocol:   false\n  #.........................................................................................................\n  return async_types\n\n\n#=========================================================================================================\nget_transform_types = ->\n  return transform_types if transform_types?\n  transform_types = new Intertype get_base_types()\n  { declare }     = transform_types\n  #.........................................................................................................\n  declare.transform_window_cfg\n    fields:\n      min:        'integer'\n      max:        'integer'\n      empty:      'anything'\n    default:\n      min:        -1\n      max:        1\n      empty:      misfit\n    isa: ( x ) ->\n      return false unless @isa.object x\n      return false unless x.min < x.max\n      return true\n  #.........................................................................................................\n  declare.transform_named_window_cfg\n    fields:\n      names:      'list.of.nonempty.text'\n      empty:      'anything'\n    default:\n      names:      [ 'left', 'mid', 'right', ]\n      empty:      misfit\n    isa: ( x ) ->\n      return false unless @isa.object x\n      return false unless @isa.odd.integer x.names.length\n      return false unless ( new Set x.names ).size is x.names.length\n      return true\n  #.........................................................................................................\n  return transform_types\n\n\n############################################################################################################\nmodule.exports = {\n  stf_prefix\n  get_base_types\n  get_sync_types\n  get_async_types\n  get_transform_types\n  misfit }\n\n\n"
  ]
}